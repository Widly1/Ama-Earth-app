// GenerateReport.jsx
// updated with our new GR(generate report) module.css file
import { useState } from 'react';
import styles from './GenerateReport.module.css'; // Import the CSS Module

const GenerateReport = () => {
  const [input, setInput] = useState('');
  const [report, setReport] = useState('');
  const [loading, setLoading] = useState(false);

  const backendURL = import.meta.env.VITE_BACKEND_URL || 'http://localhost:4000';

  const generateReport = async () => {
    setLoading(true);
    try {
      const response = await fetch(`${backendURL}/generate-report`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userInput: input }),
      });

      if (response.ok) {
        const data = await response.json();
        
        // this is added to remove the special chars generated by Gemini and replace them with emojies (provided by AI)
        const cleanedReport = data.report
          .replace(/[*#]+/g, '')
          .replace(/Weather and Environmental Report/g, '🌍 Weather & Environment Report')
          .replace(/Date:/g, '📅 Date:')
          .replace(/Location:/g, '📍 Location:')
          .replace(/General Conditions:/g, '☁️ General Conditions:')
          .replace(/Air Quality:/g, '🌿 Air Quality:')
          .replace(/Pollen Levels:/g, '🤧 Pollen Levels:')
          .replace(/Traffic Conditions:/g, '🚗 Traffic Conditions:')
          .replace(/Sunrise and Sunset:/g, '🌅 Sunrise & Sunset:')
          .replace(/Seasonal Information:/g, '🍃 Seasonal Information:')
          .replace(/Summary:/g, '📝 Summary:')
          .trim(); // remove extra spaces
        setReport(cleanedReport);
       }
        else {
        console.error('Failed to generate report', response);
      }
    } catch (error) {
      console.error('Error generating report:', error);
    }
    setLoading(false);
  };

  return (
    <div className={styles.container}>
      <h1 className={styles.title}>Ama Earth's Environmental Report Generator</h1>
      <h2 className ={styles.multicolor}>Featuring Google's Gemini</h2>
        <div className= {styles.aboutUs}>
          <h3>Simple AI Report Generator: </h3> 
          <p>The purpose of this site is to create a simple react frontend and nodejs backend that uses AI. </p>
          <p>Powered by Google's AI, Gemini, all you have to do is type below in the text box and a report will be generated for you based on your inquiry. </p>
        </div>
      <textarea
        value={input}
        onChange={(e) => setInput(e.target.value)} // update "input" state with the value being typed in the input field  
        placeholder="Enter your environmental question. I'll generate the report for you 😄" style = {{fontSize: '13px'}}
        rows="8"
        className={styles.textarea}
      />
      <button onClick={generateReport} className={styles.button} disabled={loading}>
        {loading ? 'Generating...' : 'Generate Report'}
      </button>
      {report && (
        <div className={styles.reportContainer}>
          <h3 className = {styles.multicolor}>Generated Report:</h3>
            <p
              className = {styles.fadeInText} 
              style={{ whiteSpace: 'pre-wrap', textAlign: 'left' }}>
              {report}
              </p>
        </div>
      )}
    
    </div>
  );
};

export default GenerateReport;